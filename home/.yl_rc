# -- General --
echo "Loading yl_rc..."

ZSH_THEME="cloud"
export ANDROID_SDK_ROOT=${HOME}/android_sdk
export PATH=${PATH}:${ANDROID_SDK_ROOT}/platform-tools
export CODEPATH=${HOME}/v
export GOPATH=${HOME}/go
export GPG_TTY=$(tty)
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_GITHUB_API_TOKEN=${GITHUB_TOKEN_PUBLIC}
export KUBE_EDITOR="vim"

# -- SHELL --
# Assume bash
export SHELL_NAME="bash"
if [[ -n "$ZSH_VERSION" ]]; then
    # zsh
    SHELL_NAME="zsh"
fi

# -- Functions --
# tar with date in filename
function dtar() {
    if [[ $# -lt 1 ]]; then
        echo "Usage: dtar <path>"
        return
    fi

    tar -cvf $1_$(date "+%y%m%d_%H%M").tar $1
}

# Connect TLS and print info
function tls() {
    if [[ $# -lt 1 ]]; then
        echo "Usage: tls <hostname>"
        return
    fi

    if [[ $# -gt 1 ]]; then
        if [[ $2 == "cert" ]]; then
            openssl s_client -servername $1 -connect $1:443 </dev/null 2>&1 | openssl x509 -noout -text
        elif [[ $2 == "chain" ]]; then
            openssl s_client -servername $1 -connect $1:443 -showcerts </dev/null 2>&1
        elif [[ $2 == "san" ]]; then
            openssl s_client -servername $1 -connect $1:443 </dev/null 2>&1 | openssl x509 -noout -text | grep DNS: | sed 's/DNS://g'
        fi
    else
        openssl s_client -servername $1 -connect $1:443 </dev/null 2>&1
    fi
}

# -- Aliases --
# General
alias cv="curl -v -s -o /dev/null"
alias dds="find . -name '.DS_Store' -delete"
alias goblupig="cd $GOPATH/src/github.com/blupig"
alias ip="curl https://api.blupig.net/echo/ip"
alias ll="ls -lh"
alias lla="ls -lha"
alias ping="ping -i 0.2"
alias rc="exec ${SHELL_NAME}"
alias restartbluetooth="blueutil --power 0 && sleep 5 && blueutil --power 1"
alias vimrc="vim ~/.zshrc"
alias vimyl="vim ~/.yl_rc"
alias venv="source ~/python_venv/bin/activate"

# Git
alias g="git"
alias ga="dds && git add . && git status"
alias gb="git branch"
alias gc="git checkout"
alias gca="git commit --amend"
alias gcane="git commit --amend --no-edit"
alias gcm="git commit -m"
alias gd="git diff"
alias gds="git diff --staged"
alias gl="git log"
alias gl1="git log --pretty --oneline"
alias glg="git log --graph"
alias glg1="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias gm="git merge --ff-only"
alias gp="git pull"
alias gr="git reset"
# alias grh="git reset --hard"
# alias grhh1="git reset --hard HEAD~1"
alias grpo="git remote prune origin"
alias grso="git remote show origin"
alias gs="git status"
alias gsp="git stash pop"
alias gss="git stash"

# Docker
alias d="docker"
alias de="docker exec -it"
alias di="docker images"
alias dp="docker pull"
alias dps="docker ps -a"
alias drm="docker rm -v -f \$(docker ps -aq)"
alias drmi="docker rmi \$(docker images -q)"
alias dsp="docker system prune"
alias linux="docker run -it --rm ubuntu"

# K8s
# -- kubectl autocomplete (lazy load) --
function kubectl() {
    if ! type __start_kubectl > /dev/null 2>&1; then
        echo -n "Setting up kubectl autocomplete..."
        source <(command kubectl completion ${SHELL_NAME})
        echo "done"
    fi
    command kubectl "$@"
}

alias k="kubectl"
alias ka="kubectl get nodes,deployments,horizontalpodautoscalers,services,ingress"
alias kap="kubectl apply -f"
alias kc="kubectl config"
alias kccc="kubectl config current-context"
alias kcgc="kubectl config get-contexts"
alias kci="kubectl cluster-info"
alias kcm="kubectl get configmaps --show-kind"
alias kcr="kubectl get cronjob --show-kind"
alias kcsc="kubectl config set-context"
alias kcuc="kubectl config use-context"
alias kd="kubectl get deployments --show-kind"
alias kda="kubectl get deployments --show-kind --all-namespaces"
alias kdes="kubectl describe"
alias kdn="kubectl describe nodes --show-kind"
alias kdw="kubectl get deployments --show-kind -o=wide"
alias ke="kubectl exec -it"
alias kew="kubectl get events -w"
alias kg="kubectl get --show-kind"
alias khpa="kubectl get horizontalpodautoscalers"
alias kj="kubectl get jobs --show-kind"
alias kl="kubectl logs --tail 100 -f"
alias kmc="kubectl get managedcertificates --show-kind"
alias kn="kubectl get nodes --show-kind"
alias knalloc="kubectl describe nodes | grep -A 5 \"Allocated resources:\""
alias kns="kubectl get namespaces --show-kind"
alias knw="kubectl get nodes --show-kind -o=wide"
alias kp="kubectl get pods --show-kind"
alias kpv="kubectl get pv --show-kind"
alias kpvc="kubectl get pvc --show-kind"
alias kpw="kubectl get pods --show-kind -o=wide"
alias kpwsn="kubectl get pods --show-kind -o=wide --sort-by='.spec.nodeName'"
alias kpf="kubectl port-forward"
alias kpx="kubectl proxy"
alias krs="kubectl get replicasets --show-kind"
alias ks="kubectl get services,ingress"
alias ksa="kubectl get services,ingress --all-namespaces"
alias ksec="kubectl get secrets --show-kind"
alias ktn="kubectl top node"
alias ktp="kubectl top pod"
alias kv="kubectl version -o yaml"

# Vault
alias vlogin='vault login -method=github'
alias vl="vault list"
alias vr="vault read"
alias vs="vault status"
alias vw="vault write"
